{"ast":null,"code":"import _classCallCheck from \"/Users/girish/Desktop/Combined/my-first-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/girish/Desktop/Combined/my-first-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport 'react';\n\nvar axios = require(\"axios\");\n\nvar ExampleComponent = /*#__PURE__*/function () {\n  function ExampleComponent() {\n    _classCallCheck(this, ExampleComponent);\n  }\n\n  _createClass(ExampleComponent, [{\n    key: \"getCalendarList\",\n    value: function getCalendarList() {\n      console.log(\"555 SDK get calendar list request\");\n      var calendarURL = \"http://192.168.0.3:3002/listCalendar\";\n      var requestbody = {\n        username: \"Rahul\"\n      };\n      var config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Access-Control-Allow-Origin\": true\n        }\n      };\n      axios.post(calendarURL, requestbody, config).then(function (response) {\n        console.log(\"Status code : \" + response.status);\n        var respp = JSON.stringify(response.data);\n        console.log(\"data: \" + response.data);\n        if (responseStatus.status == HttpStatus.SC_OK || responseStatus.status == HttpStatus.SC_CREATED) ;\n      }).catch(function (error) {\n        console.log('Got Error', error);\n\n        if (error.response) {\n          responseStatus.status = error.response.status;\n          if (error.response.data.error) responseStatus.message = \"Failed to obtain mucid :\" + error.response.data.error.message;else responseStatus.message = \"Failed to obtain mucid \";\n          return failure(responseStatus);\n        } else {\n          console.log(\"Got Error \" + error);\n        }\n      });\n    }\n  }]);\n\n  return ExampleComponent;\n}();\n\nvar ExampleComp = new ExampleComponent();\nexport { ExampleComp };","map":{"version":3,"sources":["../src/index.js"],"names":["axios","require","constructor","getCalendarList","console","calendarURL","requestbody","username","config","headers","response","respp","JSON","responseStatus","HttpStatus","error","failure","ExampleComp"],"mappings":";;;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAArB,OAAqB,CAArB;;IAGA,gB;AACEC,8BAAa;AAAA;AAAA;;;;WAGbC,2BAAiB;AACfC,MAAAA,OAAO,CAAPA,GAAAA,CAAAA,mCAAAA;AACA,UAAIC,WAAW,GAAf,sCAAA;AACA,UAAIC,WAAW,GAAG;AAACC,QAAAA,QAAQ,EAAG;AAAZ,OAAlB;AAGA,UAAIC,MAAM,GAAG;AACXC,QAAAA,OAAO,EAAE;AACP,0BADO,kBAAA;AAEP,yCAAgC;AAFzB;AADE,OAAb;AAOAT,MAAAA,KAAK,CAALA,IAAAA,CAAAA,WAAAA,EAAAA,WAAAA,EAAAA,MAAAA,EAAAA,IAAAA,CAEaU,UAAAA,QAAD,EAAc;AAClBN,QAAAA,OAAO,CAAPA,GAAAA,CAAY,mBAAmBM,QAAQ,CAAvCN,MAAAA;AACA,YAAIO,KAAK,GAAGC,IAAI,CAAJA,SAAAA,CAAeF,QAAQ,CAAnC,IAAYE,CAAZ;AACAR,QAAAA,OAAO,CAAPA,GAAAA,CAAY,WAAWM,QAAQ,CAA/BN,IAAAA;AAGA,YACES,cAAc,CAAdA,MAAAA,IAAyBC,UAAU,CAAnCD,KAAAA,IACAA,cAAc,CAAdA,MAAAA,IAAyBC,UAAU,CAFrC,UAAA,EAGE;AAXVd,OAAAA,EAAAA,KAAAA,CAece,UAAAA,KAAD,EAAW;AAChBX,QAAAA,OAAO,CAAPA,GAAAA,CAAAA,WAAAA,EAAAA,KAAAA;;AACA,YAAIW,KAAK,CAAT,QAAA,EAAoB;AAClBF,UAAAA,cAAc,CAAdA,MAAAA,GAAwBE,KAAK,CAALA,QAAAA,CAAxBF,MAAAA;AACA,cAAGE,KAAK,CAALA,QAAAA,CAAAA,IAAAA,CAAH,KAAA,EACAF,cAAc,CAAdA,OAAAA,GACE,6BAA6BE,KAAK,CAALA,QAAAA,CAAAA,IAAAA,CAAAA,KAAAA,CAF/B,OACAF,CADA,KAIAA,cAAc,CAAdA,OAAAA,GAAAA,yBAAAA;AAEA,iBAAOG,OAAO,CAAd,cAAc,CAAd;AARF,SAAA,MASO;AACLZ,UAAAA,OAAO,CAAPA,GAAAA,CAAY,eAAZA,KAAAA;AAED;AA7BTJ,OAAAA;AAgCC;;;;;;IAGQiB,WAAW,GAAG,IAAA,gBAAA,E","sourcesContent":["import React from 'react'\nimport styles from './styles.module.css'\nconst axios = require(\"axios\");\n//import { encode as utf8Encode } from \"utf8\";\n\nclass ExampleComponent {\n  constructor(){\n  }\n\n  getCalendarList(){\n    console.log(\"555 SDK get calendar list request\")\n    var calendarURL = \"http://192.168.0.3:3002/listCalendar\"\n    var requestbody = {username : \"Rahul\"}\n   // var jsob = JSON.parse(requestbody)\n\n    let config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\" : true,\n      },\n    };\n\n    axios\n          .post(calendarURL, requestbody, config)\n          .then((response) => {\n            console.log(\"Status code : \" + response.status);\n            var respp = JSON.stringify(response.data)\n            console.log(\"data: \" + response.data);\n           // responseStatus.status = response.status;\n\n            if (\n              responseStatus.status == HttpStatus.SC_OK ||\n              responseStatus.status == HttpStatus.SC_CREATED\n            ) {\n            // success(response.data);\n            }\n          })\n          .catch((error) => {\n            console.log('Got Error', error);\n            if (error.response) {\n              responseStatus.status = error.response.status;\n              if(error.response.data.error)\n              responseStatus.message =\n                \"Failed to obtain mucid :\" + error.response.data.error.message;\n              else\n              responseStatus.message =\n              \"Failed to obtain mucid \";\n              return failure(responseStatus);\n            } else {\n              console.log(\"Got Error \" + error);\n              //return failure(ErrorCodes.ERR_EVENT_MANAGER, error);\n            }\n          });\n\n    }\n} \n\nexport const ExampleComp = new ExampleComponent();\n"]},"metadata":{},"sourceType":"module"}