{"ast":null,"code":"import _classCallCheck from \"/Users/girish/Desktop/Combined/my-first-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/girish/Desktop/Combined/my-first-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport 'react';\n\nvar axios = require(\"axios\");\n\nvar ExampleComponent = /*#__PURE__*/function () {\n  function ExampleComponent() {\n    _classCallCheck(this, ExampleComponent);\n  }\n\n  _createClass(ExampleComponent, [{\n    key: \"getCalendarList\",\n    value: function getCalendarList() {\n      console.log(\"555 SDK get calendar list request\");\n      var calendarURL = \"http://localhost:3003/listCalendar\";\n      var requestbody = {\n        \"username\": \"Rahul\"\n      };\n      var config = {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      axios.post(calendarURL, requestbody, config).then(function (response) {\n        console.log(\"Status code : \" + response.status);\n        responseStatus.status = response.status;\n        if (responseStatus.status == HttpStatus.SC_OK || responseStatus.status == HttpStatus.SC_CREATED) ;\n      }).catch(function (error) {\n        console.log('Got Error', error);\n\n        if (error.response) {\n          responseStatus.status = error.response.status;\n          if (error.response.data.error) responseStatus.message = \"Failed to obtain mucid :\" + error.response.data.error.message;else responseStatus.message = \"Failed to obtain mucid \";\n          return failure(responseStatus);\n        } else {\n          console.log(\"Got Error \" + error);\n        }\n      });\n    }\n  }]);\n\n  return ExampleComponent;\n}();\n\nvar ExampleComp = new ExampleComponent();\nexport { ExampleComp };","map":{"version":3,"sources":["../src/index.js"],"names":["axios","require","constructor","getCalendarList","console","calendarURL","requestbody","config","headers","response","responseStatus","HttpStatus","error","failure","ExampleComp"],"mappings":";;;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAArB,OAAqB,CAArB;;IAOA,gB;AACEC,8BAAa;AAAA;AAAA;;;;WAGbC,2BAAiB;AACfC,MAAAA,OAAO,CAAPA,GAAAA,CAAAA,mCAAAA;AACA,UAAIC,WAAW,GAAf,oCAAA;AACA,UAAIC,WAAW,GAAG;AAAC,oBAAa;AAAd,OAAlB;AAoBF,UAAIC,MAAM,GAAG;AACXC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AADE,OAAb;AAOAR,MAAAA,KAAK,CAALA,IAAAA,CAAAA,WAAAA,EAAAA,WAAAA,EAAAA,MAAAA,EAAAA,IAAAA,CAEaS,UAAAA,QAAD,EAAc;AAClBL,QAAAA,OAAO,CAAPA,GAAAA,CAAY,mBAAmBK,QAAQ,CAAvCL,MAAAA;AACAM,QAAAA,cAAc,CAAdA,MAAAA,GAAwBD,QAAQ,CAAhCC,MAAAA;AAEA,YACEA,cAAc,CAAdA,MAAAA,IAAyBC,UAAU,CAAnCD,KAAAA,IACAA,cAAc,CAAdA,MAAAA,IAAyBC,UAAU,CAFrC,UAAA,EAGE;AATVX,OAAAA,EAAAA,KAAAA,CAacY,UAAAA,KAAD,EAAW;AAChBR,QAAAA,OAAO,CAAPA,GAAAA,CAAAA,WAAAA,EAAAA,KAAAA;;AACA,YAAIQ,KAAK,CAAT,QAAA,EAAoB;AAClBF,UAAAA,cAAc,CAAdA,MAAAA,GAAwBE,KAAK,CAALA,QAAAA,CAAxBF,MAAAA;AACA,cAAGE,KAAK,CAALA,QAAAA,CAAAA,IAAAA,CAAH,KAAA,EACAF,cAAc,CAAdA,OAAAA,GACE,6BAA6BE,KAAK,CAALA,QAAAA,CAAAA,IAAAA,CAAAA,KAAAA,CAF/B,OACAF,CADA,KAIAA,cAAc,CAAdA,OAAAA,GAAAA,yBAAAA;AAEA,iBAAOG,OAAO,CAAd,cAAc,CAAd;AARF,SAAA,MASO;AACLT,UAAAA,OAAO,CAAPA,GAAAA,CAAY,eAAZA,KAAAA;AAED;AA3BTJ,OAAAA;AA8BC;;;;;;IAGUc,WAAW,GAAG,IAAA,gBAAA,E","sourcesContent":["import React from 'react'\nimport styles from './styles.module.css'\nconst axios = require(\"axios\");\n//import { encode as utf8Encode } from \"utf8\";\n\n// export const ExampleComponent = ({ text }) => {\n//   return <div className={styles.test}>Example Component: {text}</div>\n// }\n\nclass ExampleComponent {\n  constructor(){\n  }\n\n  getCalendarList(){\n    console.log(\"555 SDK get calendar list request\")\n    var calendarURL = \"http://localhost:3003/listCalendar\"\n    var requestbody = {\"username\" : \"Rahul\"}\n   // var jsob = JSON.parse(requestbody)\n   \n  //   fetch(calendarURL, {\n  //     method: 'POST',\n  //     headers: null,\n  // }).then(response => {\n  //   console.log(\"555 SDK get calendar list respons\",response)\n  //     if(response.status != 200){\n  //       console.log(\"555 SDK get calendar list invalid statuscode\",response.status)\n  //     }else{\n  //         return response.json();\n  //     }\n  // }).then(responseJson =>{\n  //   console.log(\"Routing id: \",responseJson);\n  //    // responseStatus({status: 'Success'});   \n  // }).catch((error) => {\n  //   console.log('Got Error', error);\n  // });\n\n  let config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n\n    },\n  };\n\n  axios\n        .post(calendarURL, requestbody, config)\n        .then((response) => {\n          console.log(\"Status code : \" + response.status);\n          responseStatus.status = response.status;\n\n          if (\n            responseStatus.status == HttpStatus.SC_OK ||\n            responseStatus.status == HttpStatus.SC_CREATED\n          ) {\n           // success(response.data);\n          }\n        })\n        .catch((error) => {\n          console.log('Got Error', error);\n          if (error.response) {\n            responseStatus.status = error.response.status;\n            if(error.response.data.error)\n            responseStatus.message =\n              \"Failed to obtain mucid :\" + error.response.data.error.message;\n            else\n            responseStatus.message =\n             \"Failed to obtain mucid \";\n            return failure(responseStatus);\n          } else {\n            console.log(\"Got Error \" + error);\n            //return failure(ErrorCodes.ERR_EVENT_MANAGER, error);\n          }\n        });\n\n  }\n} \n\nexport const ExampleComp = new ExampleComponent();\n"]},"metadata":{},"sourceType":"module"}