{"ast":null,"code":"import _classCallCheck from \"/Users/girish/Desktop/Combined/my-first-library/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/girish/Desktop/Combined/my-first-library/node_modules/react-scripts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport 'react';\n\nvar ExampleComponent = /*#__PURE__*/function () {\n  function ExampleComponent() {\n    _classCallCheck(this, ExampleComponent);\n  }\n\n  _createClass(ExampleComponent, [{\n    key: \"getCalendarList\",\n    value: function getCalendarList() {\n      console.log(\"555 SDK get calendar list request\");\n      fetch(EventConfig.IDENTITY_MANAGER_URL + 'v1/routingid/appdomain/' + EventConfig.APP_DOMAIN + '/publicid/' + userId, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + irisToken,\n          'User-Agent': getUserAgent()\n        }\n      }).then(function (response) {\n        logger.Info(Tag, \"routing id request ressponse\", response);\n\n        if (response.status != 200) {\n          logger.Error(Tag, \"Received error response. Status code: \" + response.status);\n          responseStatus({\n            status: 'Failure'\n          });\n        } else {\n          return response.json();\n        }\n      }).then(function (responseJson) {\n        logger.Info(Tag, \"Routing id: \", responseJson.routing_id);\n        responseStatus({\n          status: 'Success'\n        });\n      }).catch(function (error) {\n        logger.Error(Tag, 'Got Error', error);\n      });\n    }\n  }]);\n\n  return ExampleComponent;\n}();\n\nvar ExampleComp = new ExampleComponent();\nexport { ExampleComp };","map":{"version":3,"sources":["../src/index.js"],"names":["constructor","getCalendarList","console","fetch","EventConfig","method","headers","getUserAgent","response","logger","responseStatus","status","responseJson","error","ExampleComp"],"mappings":";;;;IAOA,gB;AACEA,8BAAa;AAAA;AAAA;;;;WAGbC,2BAAiB;AACfC,MAAAA,OAAO,CAAPA,GAAAA,CAAAA,mCAAAA;AACAC,MAAAA,KAAK,CAACC,WAAW,CAAXA,oBAAAA,GAAAA,yBAAAA,GAA8DA,WAAW,CAAzEA,UAAAA,GAAAA,YAAAA,GAAD,MAAA,EAA+G;AAClHC,QAAAA,MAAM,EAD4G,KAAA;AAElHC,QAAAA,OAAO,EAAE;AACL,0BADK,kBAAA;AAEL,2BAAiB,YAFZ,SAAA;AAGL,wBAAeC,YAAY;AAHtB;AAFyG,OAA/G,CAALJ,CAAAA,IAAAA,CAOMK,UAAAA,QAAQ,EAAI;AAChBC,QAAAA,MAAM,CAANA,IAAAA,CAAAA,GAAAA,EAAAA,8BAAAA,EAAAA,QAAAA;;AACA,YAAGD,QAAQ,CAARA,MAAAA,IAAH,GAAA,EAA0B;AACtBC,UAAAA,MAAM,CAANA,KAAAA,CAAAA,GAAAA,EAAkB,2CAA0CD,QAAQ,CAApEC,MAAAA;AACAC,UAAAA,cAAc,CAAC;AAACC,YAAAA,MAAM,EAAE;AAAT,WAAD,CAAdD;AAFJ,SAAA,MAGK;AACD,iBAAOF,QAAQ,CAAf,IAAOA,EAAP;AACH;AAdHL,OAAAA,EAAAA,IAAAA,CAeMS,UAAAA,YAAY,EAAG;AACnBH,QAAAA,MAAM,CAANA,IAAAA,CAAAA,GAAAA,EAAAA,cAAAA,EAAgCG,YAAY,CAA5CH,UAAAA;AACAC,QAAAA,cAAc,CAAC;AAACC,UAAAA,MAAM,EAAE;AAAT,SAAD,CAAdD;AAjBFP,OAAAA,EAAAA,KAAAA,CAkBQU,UAAAA,KAAD,EAAW;AAChBJ,QAAAA,MAAM,CAANA,KAAAA,CAAAA,GAAAA,EAAAA,WAAAA,EAAAA,KAAAA;AAnBFN,OAAAA;AAsBD;;;;;;IAGUW,WAAW,GAAG,IAAA,gBAAA,E","sourcesContent":["import React from 'react'\nimport styles from './styles.module.css'\n\n// export const ExampleComponent = ({ text }) => {\n//   return <div className={styles.test}>Example Component: {text}</div>\n// }\n\nclass ExampleComponent {\n  constructor(){\n  }\n\n  getCalendarList(){\n    console.log(\"555 SDK get calendar list request\")\n    fetch(EventConfig.IDENTITY_MANAGER_URL + 'v1/routingid/appdomain/' +EventConfig.APP_DOMAIN + '/publicid/' + userId, {\n      method: 'GET',\n      headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + irisToken,\n          'User-Agent' : getUserAgent(),\n      },\n  }).then(response => {\n      logger.Info(Tag,\"routing id request ressponse\", response);\n      if(response.status != 200){\n          logger.Error(Tag, \"Received error response. Status code: \"+ response.status);\n          responseStatus({status: 'Failure'});\n      }else{\n          return response.json();\n      }\n  }).then(responseJson =>{\n      logger.Info(Tag, \"Routing id: \",responseJson.routing_id);\n      responseStatus({status: 'Success'});   \n  }).catch((error) => {\n      logger.Error(Tag, 'Got Error', error);\n  });\n\n  }\n} \n\nexport const ExampleComp = new ExampleComponent();\n"]},"metadata":{},"sourceType":"module"}